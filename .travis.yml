language: python
python:
- '3.6'
script:
- python tests.py
deploy:
  provider: script
  script:
    - echo "$HEROKU_API_TOKEN" | docker login -u "$HEROKU_USERNAME" --password-stdin registry.heroku.com
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - export REPO=tfm-diego-heroku-
    - docker pull paberlo/alpine-scikit-django-jdk8:latest

    - export TAG=web
    - docker build -f $TRAVIS_BUILD_DIR/Dockerfile-heroku-web -t $REPO/$TAG .
    - docker tag $REPO/$TAG:latest registry.heroku.com/tfm-diego/$TAG
    - docker push registry.heroku.com/tfm-diego/$TAG

    - export TAG=worker
    - docker build -f $TRAVIS_BUILD_DIR/Dockerfile-worker -t $REPO/$TAG .
    - docker tag $REPO/$TAG:latest registry.heroku.com/tfm-diego/$TAG
    - docker push registry.heroku.com/tfm-diego/$TAG
    - heroku container:release web --app tfm-diego
  on: pablo
#  api_key:
    #la key se consigue con el comando en local travis encrypt $(heroku auth:token) --add deploy.api_key --pro
    #el --pro hace falta porque el repo es privado y hace falta usar la versión pro de prueba (travis-ci.com)
    # ver https://docs.travis-ci.com/user/deployment/heroku/
    #para login de travis command line en gitbash: winpty ruby `which travis` login
#    secure: $HEROKU_TOKEN
#  #rama pablo. Diego usará master
#  on: pablo
#  app: tfm-diego
#after_success:


# Invalid credentials cuando intenta hacer login
#- heroku container:release web worker -a tfm-diego
